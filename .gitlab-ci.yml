image: "python:latest"

stages:
    - doc
    - build
    - deploy

apidoc:
    stage: doc
    script:
        - pip install -r requirements.txt
        - pip install pdoc
        - pdoc jdTextEdit -o public

build_exe:
    stage: build
    script:
        - Invoke-WebRequest -Uri https://www.python.org/ftp/python/3.9.1/python-3.9.1-amd64.exe -OutFile python-installer.exe
        - .\python-installer.exe /quiet InstallAllUsers=1 PrependPath=1 Include_test=0 | Out-Null
        - $env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path","User")
        - pip install -r requirements.txt
        - pip install cx-Freeze
        - python build_exe.py build
    artifacts:
        paths:
            - build
    only:
        - tags
    tags:
        - windows

pip_deploy:
    stage: deploy
    script:
        - pip install twine wheel PySide6
        - python setup.py sdist bdist_wheel
        - twine upload -u "$PYPI_USERNAME" -p "$PYPI_PASSWORD" dist/*
    only:
        - tags

sourceforge_deploy:
    stage: deploy
    image: "python:3.7"
    dependencies:
        - build_exe
    script:
        - pip install pysftp
        - python deploy/sourceforge.py
    only:
        - tags

#snapcraft_deploy:
#    stage: deploy
#    image: "ubuntu:latest"
#    script:
#        - apt update
#        - apt install -y snapcraft
#        - snapcraft
#        - snapcraft login --with $SNAPCRAFT_LOGIN_DATA
#        - snapcraft push --release=stable jdtextedit_7.2_amd64.snap
#    artifacts:
#        paths:
#           - jdtextedit_7.2_amd64.snap
#    only:
 #       - tags
